environment:
  global:
    TWINE_USERNAME: confidentialcomputing
    TWINE_PASSWORD:
      secure: v/CA7epn+w6NgHihL5rLRc8+lUbgNMsMsMp5/XPWSoI=

  INCLUDE_CLI: 1

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python27"
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python27-x64"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36-x64"

install:
  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --upgrade pip"

  # We need wheel installed to build wheels
  - "%PYTHON%\\python.exe -m pip install -U wheel setuptools"
  # We need our development dependencies for testing
  - "%PYTHON%\\python.exe -m pip install -U -r requirements.txt"
  # Install codecov so we can publish code coverage results after testing
  - "%PYTHON%\\python.exe -m pip install -U codecov"
  # We need to install clkhash library itself
  - "%PYTHON%\\python.exe -m pip install ."

build: off

test_script:
  # Put your test command here.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  - "%PYTHON%\\python.exe -m pytest --cov=clkhash"

after_test:
  - "%PYTHON%\\python.exe -m codecov"
  - "%PYTHON%\\scripts\\pyinstaller.exe cli.spec"
  - ".\\dist\\clkutil.exe --version"
  - "%PYTHON%\\python.exe setup.py bdist_wheel"
  - ps: "ls dist"


# Note Appveyor has only a small allocation for artifacts
artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

deploy_script:
  - ps: if ($env:APPVEYOR_REPO_TAG -eq $TRUE) { pip install twine; twine upload --skip-existing dist/* }

deploy: on
